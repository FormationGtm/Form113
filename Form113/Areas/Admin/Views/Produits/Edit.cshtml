@model DataLayer.Models.Produits

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-md-6">
            <h4>Produits</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdProduit)

            <div class="form-group">
                @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Couleur, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Couleur, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Couleur, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Prix, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Prix, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prix, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdSousCategorie, "IdSousCategorie", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("IdSousCategorie", null, htmlAttributes: new { @class = "form-control" })*@
                    <select id="IdSousCategorie" class="form-control valid" name="IdSousCategorie">
                        @foreach (var Cat in ViewBag.ListeSousCat)
                        {
                            <optgroup label="@Cat.Key">
                                @foreach (var SousCat in ViewBag.ListeSousCat[Cat.Key])
                                {
                                    if (@Model.IdSousCategorie == SousCat.Key)
                                    {
                                        <option selected value="@SousCat.Key">@SousCat.Value</option>
                                    }
                                    else
                                    {
                                        <option value="@SousCat.Key">@SousCat.Value</option>
                                    }
                                }

                            </optgroup>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.IdSousCategorie, "", new { @class = "text-danger" })
                </div>

                @Html.ValidationMessageFor(model => model.IdSousCategorie, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Promotion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Promotion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Promotion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodePays, "CodePays", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CodePays", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodePays, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.DateMiseEnVente)
        <div class="col-md-6">
            <h4>Photos</h4>
            <div class="btn-group-vertical">@Html.Action("PhotoProduit", "Produits", new { id = @Model.IdProduit })</div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("AddPicture", "Produits", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.IdProduit)

    <div class="form-inline">
        <div class="form-group">
            <label for="file" class="col-lg-2">Image a Ajouter:</label>
            <input type="file" name="file" id="file" style="width: 100%;" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="AjouterPhoto" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
